bindkey -e

HISTFILE=~/.histfile
HISTSIZE=10000
SAVEHIST=100000

# Remove '/' from wordchars.
WORDCHARS="${WORDCHARS/\//}"

setopt autocd beep extendedglob nomatch notify

autoload -Uz compinit
autoload -U add-zsh-hook
compinit

venv() {
  env=$1
  if [ -z $env ]; then
    return 1
  fi
  env_dir=~/.venv/$env
  if [ ! -d $env_dir ]; then
    python -m venv $env_dir
  fi
  source $env_dir/bin/activate
}

function set-nvim-listen-address {
    local server_name="default"
    if [ "$TMUX" ]; then
        local tmux_window=$(tmux display-message -p '#S-#I' 2> /dev/null)
    fi
    local sway_ws=$(swaymsg -t  get_workspaces 2> /dev/null | \
       jq -r "map(select(.focused == true)) | map(.name) | first")
    local i3_ws=$(i3-msg -t  get_workspaces 2> /dev/null | \
       jq -r "map(select(.focused == true)) | map(.name) | first")

    if [ "$tmux_window" ]; then
        server_name="tmux-$tmux_window"
    elif [ "$sway_ws" ]; then
        server_name="sway-$sway_ws"
    elif [ "$i3_ws" ]; then
        server_name="i3-$i3_ws"
    fi

    # Set the NVIM listen address. Works for the server (launched via `nvim`)
    # and client (launched via `nvr`).
    export NVIM_LISTEN_ADDRESS="/tmp/nvim-${server_name:-$1}-vim.sock"
}
add-zsh-hook chpwd set-nvim-listen-address
set-nvim-listen-address


if [ -n "${commands[zoxide]}" ]; then
  eval "$(zoxide init zsh)"
fi

if [ -n "${commands[fzf-share]}" ]; then
  source "$(fzf-share)/key-bindings.zsh"
  source "$(fzf-share)/completion.zsh"
fi

export GOPATH="$HOME/.local/share/go"
export PATH="$HOME/.cargo/bin:$PATH"
